1、相对定位：相对于自己本身的位置进行定位；使用top、right、bottom、left来设置定位的位置；e.g：top：10px，在自己原来的位置上，往下移动10px；
2、绝对定位：相对于父元素的位置来定位，且要求父元素有position属性，否则将根据父元素的父元素进行定位，依次找，直到找到有position标签的属性，
   如果都没有，则找到body处为止。
   
3、绝对定位 浮在父元素上方，并没有占父元素的空间；而使用绝对定位，其原来的位置也不会被其他元素占用，还是归它本身所有。

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html lang="en">
<head>
	<meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
	<title>定位</title>
	<style>
		#test1{
			width:300px;
			height:300px;
			background: pink;
		}
		p{
			margin:0px;
			padding:0px;
		}
		#p1{
			width:100px;
			height:100px;
			background: blue;
			position:relative;
			bottom:5px;
			right:5px;
		}

		#p2{
			width:100px;
			height:100px;
			background: black;
		}

		#test2{
			width:300px;
			height:300px;
			background: gray;
			position: relative;
		}

		#p3{
			width:100px;
			height:100px;
			background: red;
			position: absolute;
			top:10px;
			left:10px;
			z-index:100;
		}

		#p4{
			width:100px;
			height:100px;
			background: green;
			position: absolute;
			top:15px;
			left:15px;
		}
	</style>
</head>
<body>
	<div id="test1">
		<div id="p1">这是p1使用相对定位</div>
		<div id="p2">这是p2，用来作为参照物</div>
	</div>
	<div id="test2">
		把父元素填写一些内容，用来展示绝对定位，子元素并不占用父元素的空间，只是浮在父元素上方。当有两个浮在父元素上方的子元素时，可以通过设置z-index:1000(或者其他数字)来提高子元素的优先级，即选择优先级高的一个子元素覆盖另一个子元素。
		<div id="p3">这是p3，使用绝对定位</div>
		<div id="p4">这是p4，如果和p3有重叠，应该谁覆盖谁</div>
	</div>
</body>
</html>
